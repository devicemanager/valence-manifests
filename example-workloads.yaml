apiVersion: v1
kind: Service
metadata:
  labels:
    app: todo-backend-django-valence
    valence.net/prometheus: "true"
  name: todo-backend-django-valence
spec:
  ports:
  - name: headless
    port: 80
    targetPort: 8081
  - name: prometheus
    port: 8181
    targetPort: 8181
  selector:
    app: todo-backend-django-valence
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: todo-backend-django
    valence.net/prometheus: "true"
  name: todo-backend-django
spec:
  ports:
  - name: headless
    port: 80
    targetPort: 8081
  - name: prometheus
    port: 8181
    targetPort: 8181
  selector:
    app: todo-backend-django
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    valence.io/optimizer.configure: "true"
  labels:
    app: todo-backend-django-valence
    slo: slo-webapps
  name: todo-backend-django-valence
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: todo-backend-django-valence
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 10%
  template:
    metadata:
      labels:
        app: todo-backend-django-valence
    spec:
      containers:
      - env:
        - name: SERVICE_PORT_VALUE
          value: "8000"
        image: valencenet/envoyproxy:0.3.0
        imagePullPolicy: IfNotPresent
        name: envoy
        ports:
        - containerPort: 8081
          name: envoy-sidecar
        - containerPort: 8181
          name: envoy-metrics
        resources:
          limits:
            cpu: 500m
            memory: 500M
          requests:
            cpu: 250m
            memory: 250M
      - env:
        - name: PORT
          value: "8000"
        image: manifoldco/todo-backend-django:latest
        imagePullPolicy: IfNotPresent
        name: todo-backend-django-valence
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /todos
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 60
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 500m
            memory: 500M
          requests:
            cpu: 250m
            memory: 250M
      restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: todo-backend-django
  name: todo-backend-django
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: todo-backend-django
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 10%
  template:
    metadata:
      labels:
        app: todo-backend-django
    spec:
      containers:
      - env:
        - name: SERVICE_PORT_VALUE
          value: "8000"
        image: valencenet/envoyproxy:0.3.0
        imagePullPolicy: IfNotPresent
        name: envoy
        ports:
        - containerPort: 8081
          name: envoy-sidecar
        - containerPort: 8181
          name: envoy-metrics
        resources:
          limits:
            cpu: 500m
            memory: 500M
          requests:
            cpu: 250m
            memory: 250M
      - env:
        - name: PORT
          value: "8000"
        image: manifoldco/todo-backend-django:latest
        imagePullPolicy: IfNotPresent
        name: todo-backend-django
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /todos
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 60
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 500m
            memory: 500M
          requests:
            cpu: 250m
            memory: 250M
      restartPolicy: Always
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: workload-simulation
  name: majin-todo-backend-django-valence
spec:
  template:
    metadata:
      labels:
        app: workload-simulation
    spec:
      containers:
      - args:
        - attack
        - --base-load
        - "300"
        - --period
        - "600"
        env:
        - name: TARGET
          value: http://todo-backend-django-valence.default/todos
        image: valencenet/majin:0.3.2
        name: majin
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: workload-simulation
  name: majin-todo-backend-django
spec:
  template:
    metadata:
      labels:
        app: workload-simulation
    spec:
      containers:
      - args:
        - attack
        - --base-load
        - "300"
        - --period
        - "600"
        env:
        - name: TARGET
          value: http://todo-backend-django.default/todos
        image: valencenet/majin:0.3.2
        name: majin
      restartPolicy: OnFailure
---
apiVersion: optimizer.valence.io/v1alpha1
kind: ServiceLevelObjective
metadata:
  name: slo-webapps
spec:
  objectives:
  - http:
      latency:
        percentile: 95
        responseTime: 500ms
    type: HTTP
  selector:
    slo: slo-webapps
